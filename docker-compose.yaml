services:
  nginx:
    image: nginx:alpine
    container_name: nginx
    depends_on:
      - frontend
      - auth-service
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
    networks:
      - brewget

  frontend:
    depends_on:
      - auth-service
    container_name: frontend
    image: "ghcr.io/brewingbytes/brewget-frontend:0.0.3"
    environment:
      - VITE_API_ENDPOINT=http://localhost
    networks:
      - brewget
    expose:
      - 80

  auth-service:
    depends_on:
      - db
      - email-service
    container_name: auth-service
    image: "ghcr.io/brewingbytes/brewget-auth-service:0.0.7"
    environment:
      - PG_URL=db
      - PG_USERNAME=user-name
      - PG_PASSWORD=strong-password
      - AUTH_PG_DATABASE=brewget_auth
      - CORS_URL=http://localhost
      - JWT_SECRET=secret
      - JWT_EXPIRES_IN=86400
      - JWT_MAX_AGE=86400
      - AUTH_HTTP_PORT=8000
      - EMAIL_HOSTNAME=http://email-service
      - EMAIL_GRPC_PORT=9001
      - FRONTEND_HOSTNAME=http://localhost
    networks:
      - db
      - brewget
    expose:
      - 8000

  email-service:
    container_name: email-service
    image: "ghcr.io/brewingbytes/brewget-email-service:0.0.6"
    environment:
      - SMTP_EMAIL=noreply@brewingbytes.com
      - SMTP_NAME=BrewGet
      - SMTP_RELAY=smtp.example.com
      - SMTP_USERNAME=smtp-user
      - SMTP_PASSWORD=smtp-password
      - EMAIL_GRPC_PORT=9001
    networks:
      - db
      - brewget
    expose:
      - 9001

  settings-service:
    depends_on:
      - db
    container_name: settings-service
    image: "ghcr.io/brewingbytes/brewget-settings-service:0.0.3"
    environment:
      - PG_URL=db
      - PG_USERNAME=user-name
      - PG_PASSWORD=strong-password
      - SETTINGS_PG_DATABASE=brewget_settings
      - CORS_URL=http://localhost
      - SETTINGS_HTTP_PORT=8001
    networks:
      - db
      - brewget
    expose:
      - 8001

  db:
    image: postgres
    container_name: postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: user-name
      POSTGRES_PASSWORD: strong-password
    volumes:
      - db:/var/lib/postgresql/data
    networks:
      - db

networks:
  brewget:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.host_binding_ipv4: "127.0.0.1"
  db:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.host_binding_ipv4: "127.0.0.1"

volumes:
  db:
  pgadmin:
