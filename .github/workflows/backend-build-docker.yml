on:
  push:
    branches:
      - main

name: Backend Docker Build
jobs:
  docker:
      name: Build Backend Docker Images
      permissions:
        packages: write
        contents: read
        attestations: write
        id-token: write
      defaults:
        run:
          working-directory: ./backend
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v5
        - uses: dorny/paths-filter@v3
          id: changes
          name: Changes
          with:
            filters: |
              auth:
                - 'backend/auth-service/Cargo.toml'
              email:
                - 'backend/email-service/Cargo.toml'
              base-image:
                - 'backend/Dockerfile'
        - name: Cache
          uses: actions/cache@v4
          with:
            path: |
              ~/.cargo/registry
              ~/.cargo/git
              target
            key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        - name: Build base-image
          run: docker build -t base-image .
        - name: Get services version
          id: get_version
          run: |
            VERSION=$(grep '^version = ' ./auth-service/Cargo.toml | sed -n 's/^version = "\(.*\)"/\1/p')
            echo "auth_version=$VERSION" >> "$GITHUB_OUTPUT"
            VERSION=$(grep '^version = ' ./email-service/Cargo.toml | sed -n 's/^version = "\(.*\)"/\1/p')
            echo "email_version=$VERSION" >> "$GITHUB_OUTPUT"
        - name: Log in to Docker Hub
          uses: docker/login-action@v3
          with:
            registry: ghcr.io
            username: ${{ github.actor }}
            password: ${{ secrets.DOCKER_PASSWORD }}
        - name: Build auth-service image
          id: auth_service
          if: steps.changes.outputs.auth == 'true' || steps.changes.outputs.base-image == 'true'
          run: |
            if docker manifest inspect ghcr.io/brewingbytes/brewget-auth-service:${{ steps.get_version.outputs.auth_version }}; then
              echo "Tag already exists."
              echo "build=false" >> "$GITHUB_OUTPUT"
            else
              docker build -t auth-service auth-service
              docker tag auth-service ghcr.io/brewingbytes/brewget-auth-service:${{ steps.get_version.outputs.auth_version }}
              docker tag auth-service ghcr.io/brewingbytes/brewget-auth-service:latest
              echo "build=true" >> "$GITHUB_OUTPUT"
            fi
        - name: Build email-service image
          id: email_service
          if: steps.changes.outputs.email == 'true' || steps.changes.outputs.base-image == 'true'
          run: |
            if docker manifest inspect ghcr.io/brewingbytes/brewget-email-service:${{ steps.get_version.outputs.email_version }}; then
              echo "Tag already exists."
              echo "build=false" >> "$GITHUB_OUTPUT"
            else
              docker build -t email-service email-service
              docker tag email-service ghcr.io/brewingbytes/brewget-email-service:${{ steps.get_version.outputs.email_version }}
              docker tag email-service ghcr.io/brewingbytes/brewget-email-service:latest
              echo "build=true" >> "$GITHUB_OUTPUT"
            fi
        - name: Push auth-service
          if: steps.auth_service.outputs.build == 'true'
          run: |
            docker push ghcr.io/brewingbytes/brewget-auth-service:${{ steps.get_version.outputs.auth_version }}
            docker push ghcr.io/brewingbytes/brewget-auth-service:latest
        - name: Push email-service
          if: steps.email_service.outputs.build == 'true'
          run: |
            docker push ghcr.io/brewingbytes/brewget-email-service:${{ steps.get_version.outputs.email_version }}
            docker push ghcr.io/brewingbytes/brewget-email-service:latest
